{
    "openapi": "3.0.0",
    "info": {
        "title": "Proyecto final NodeJS",
        "version": "1.0.0",
        "description": "Creación y gestión de usuarios en el backend utilizando nodeJS y postgres como base de datos",
        "contact": {
            "name": "Hebert Villarreal",
            "email": "hebertvillarreal1@gmail.com"
        }
    },
    "paths": {
        "/api/v1/signup":{
            "post":{
                "description": "Registro de nuevos usuarios y valida que el email no se encuentre previamente registrado",
                "tags": ["Auth"],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Users"
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Se ha agregado a un nuevo usuario"
                    }
                }
            }
        },
        "/api/v1/login":{
            "post":{
                "description": "Inicio de sesión por medio del email y la contraseña",
                "tags": ["Auth"],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type": "object",
                                "properties": {
                                    "email":{
                                        "type": "string"
                                    },
                                    "password":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Se ha iniciado sesión de manera correcta"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post":{
                "description": "Se manda un token de autorización al email propocionado para restablecer la constraseña",
                "tags": ["Auth"],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type":"object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Se envió el token de reestablecimiento al correo electrónico proporcionado"
                    }
                }
            }
        },
        "/api/v1/update-password":{
            "put":{
                "description": "Se coloca el token recibido al email y se coloca la nueva contraseña",
                "tags": ["Auth"],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "type":"object",
                                "properties": {
                                    "token":{
                                        "type":"string"
                                    },
                                    "password":{
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200":{
                        "description": "La constraseña se restableció de manera éxitosa"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Primeramente se debe de iniciar sesión, dentro del response body se encuentra el token, este se debe de copiar y se debe de colocar dentro de la casilla de Authorize",
                "tags": ["Users"],
                "responses": {
                    "200":{
                        "description": "Obtener a todos los usuarios"
                    }
                },
                "security": [
                    {
                        "jwt":[]
                    }
                ]
            }
        },
        "/api/v1/users/{id}":{
            "get":{
                "description": "Primeramente se debe de iniciar sesión, dentro del response body se encuentra el token, este se debe de copiar y se debe de colocar dentro de la casilla de Authorize",
                "tags": ["Users"],
                "parameters": [
                    {
                        "schema":{},
                        "in": "path",
                        "name": "id",
                        "required": true
                    }
                ],
                "responses": {
                    "200":{
                        "description": "Obteniendo un usuario por el id"
                    }
                },
                "security": [
                    {
                        "jwt":[]
                    }
                ]
            }
        },
        "/api/v1/roles":{
            "post":{
                "description": "Agregar un nuevo rol, se debe de iniciar sesión para generar un nuevo token y colocarlo en la casilla de Authorize para poder agregar un nuevo rol",
                "tags": ["Roles"],
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref": "#/components/schemas/Roles"
                            }
                        }
                    }
                },
                "responses": {
                    "201":{
                        "description": "Se ha creado el rol de manera éxitosa"
                    }
                },
                "security": [
                    {
                        "jwt":[]
                    }
                ]
            }
        },
        "/api/v1/users/{userId}/roles/{roleId}":{
            "post":{
                "description": "Agregar un nuevo rol a un usuario o actualizar el rol de un usuario, se debe de iniciar sesión para generar un nuevo token el cual se encuentra en el response body, este token se debe de colocar en la casilla de Authorize \n\nRoles: \n1. Administrador \n2. Editor",
                "tags": ["Roles"],
                "parameters": [
                    {
                        "schema":{},
                        "in": "path",
                        "name": "userId",
                        "required": true
                    },
                    {
                        "schema":{},
                        "in": "path",
                        "name": "roleId",
                        "required": true    
                    }
                ],
                "responses": {
                    "201":{
                        "description": "Se añadió o se actualizó un nuevo rol al usuario"
                    }
                },
                "security": [
                    {
                        "jwt":[]
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "jwt": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JSON web token"
            }
        },
        "schemas": {
            "Users": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password"
                ],
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName":{
                        "type": "string"
                    },
                    "email":{
                        "type": "string"
                    },
                    "password":{
                        "type": "string"
                    }
                }
            },
            "Roles":{
                "type":"object",
                "required":[
                    "name"
                ],
                "properties":{
                    "name":{
                        "type": "string"
                    }
                }
            },
            "UserRoles":{
                "type": "object",
                "required": [
                    "userId",
                    "roleId"
                ],
                "properties": {
                    "userId":{
                        "type": "integer"
                    },
                    "roleId":{
                        "type": "integer"
                    }
                }
            }
        }
    }
}